// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/GyroZepelix/mithril-cms/internal/service/content (interfaces: Manager)
//
// Generated by this command:
//
//	mockgen -destination=mock/contentManager_mock.go . Manager
//

// Package mock_content is a generated GoMock package.
package mock_content

import (
	context "context"
	reflect "reflect"

	persistence "github.com/GyroZepelix/mithril-cms/internal/storage/persistence"
	uuid "github.com/google/uuid"
	gomock "go.uber.org/mock/gomock"
)

// MockManager is a mock of Manager interface.
type MockManager struct {
	ctrl     *gomock.Controller
	recorder *MockManagerMockRecorder
	isgomock struct{}
}

// MockManagerMockRecorder is the mock recorder for MockManager.
type MockManagerMockRecorder struct {
	mock *MockManager
}

// NewMockManager creates a new mock instance.
func NewMockManager(ctrl *gomock.Controller) *MockManager {
	mock := &MockManager{ctrl: ctrl}
	mock.recorder = &MockManagerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockManager) EXPECT() *MockManagerMockRecorder {
	return m.recorder
}

// GetContent mocks base method.
func (m *MockManager) GetContent(contentId uuid.UUID, ctx context.Context) (persistence.Post, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetContent", contentId, ctx)
	ret0, _ := ret[0].(persistence.Post)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetContent indicates an expected call of GetContent.
func (mr *MockManagerMockRecorder) GetContent(contentId, ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetContent", reflect.TypeOf((*MockManager)(nil).GetContent), contentId, ctx)
}

// ListContents mocks base method.
func (m *MockManager) ListContents(ctx context.Context) ([]persistence.Post, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListContents", ctx)
	ret0, _ := ret[0].([]persistence.Post)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListContents indicates an expected call of ListContents.
func (mr *MockManagerMockRecorder) ListContents(ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListContents", reflect.TypeOf((*MockManager)(nil).ListContents), ctx)
}
